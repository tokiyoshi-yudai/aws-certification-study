AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create an EFS file system with encryption, multiple EC2 instances attached, and snapshot functionality in a multi-AZ setup.

Resources:
  # VPC for EC2 and EFS
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: EFSVPC

  SubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: EFSPublicSubnetA

  SubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: EFSPublicSubnetB

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetA
      RouteTableId: !Ref RouteTable

  SubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref SubnetB
      RouteTableId: !Ref RouteTable

  # Security Group for EC2 and EFS
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow NFS access
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 2049
          ToPort: 2049
          CidrIp: 0.0.0.0/0

  # EFS File System
  EFSFileSystem:
    Type: AWS::EFS::FileSystem
    Properties:
      Encrypted: true
      LifecyclePolicies:
        - TransitionToIA: AFTER_30_DAYS
      PerformanceMode: generalPurpose
      ThroughputMode: bursting

  EFSMountTargetA:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EFSFileSystem
      SubnetId: !Ref SubnetA
      SecurityGroups:
        - !Ref SecurityGroup

  EFSMountTargetB:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref EFSFileSystem
      SubnetId: !Ref SubnetB
      SecurityGroups:
        - !Ref SecurityGroup

  # EC2 Instances
  EC2Instance1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.micro
      KeyName: my-key-pair # Replace with your key pair name
      ImageId: ami-0c02fb55956c7d316 # Replace with a valid AMI ID
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          SubnetId: !Ref SubnetA
          DeviceIndex: 0
          GroupSet:
            - !Ref SecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum install -y amazon-efs-utils
          mkdir /mnt/efs
          mount -t efs -o tls ${EFSFileSystem}:/ /mnt/efs

  EC2Instance2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.micro
      KeyName: my-key-pair # Replace with your key pair name
      ImageId: ami-0c02fb55956c7d316 # Replace with a valid AMI ID
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          SubnetId: !Ref SubnetB
          DeviceIndex: 0
          GroupSet:
            - !Ref SecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum install -y amazon-efs-utils
          mkdir /mnt/efs
          mount -t efs -o tls ${EFSFileSystem}:/ /mnt/efs

  # Backup Plan for EFS Snapshots
  BackupVault:
    Type: AWS::Backup::BackupVault
    Properties:
      BackupVaultName: EFSBackupVault

  BackupPlan:
    Type: AWS::Backup::BackupPlan
    Properties:
      BackupPlan:
        BackupPlanName: EFSBackupPlan
        Rules:
          - RuleName: DailyBackup
            TargetBackupVault: !Ref BackupVault
            ScheduleExpression: cron(0 12 * * ? *) # Daily at 12 PM UTC
            StartWindowMinutes: 60
            Lifecycle:
              DeleteAfterDays: 30
      BackupPlanTags:
        - Key: Environment
          Value: Production

  BackupSelection:
    Type: AWS::Backup::BackupSelection
    Properties:
      BackupPlanId: !Ref BackupPlan
      BackupSelection:
        SelectionName: EFSBackupSelection
        Resources:
          - !Sub "arn:aws:efs:${AWS::Region}:${AWS::AccountId}:file-system/${EFSFileSystem}"

Outputs:
  EFSFileSystemId:
    Description: The ID of the created EFS file system
    Value: !Ref EFSFileSystem

  EC2Instance1PublicIP:
    Description: Public IP of the first EC2 instance
    Value: !GetAtt EC2Instance1.PublicIp

  EC2Instance2PublicIP:
    Description: Public IP of the second EC2 instance
    Value: !GetAtt EC2Instance2.PublicIp
